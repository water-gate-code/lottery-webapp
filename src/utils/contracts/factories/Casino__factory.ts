/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Casino, CasinoInterface } from "../Casino";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "minimumRequestConfirmations",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "callbackGasLimit",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "numWords",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "subId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "VRFCoordinatorV2InterfaceAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract Game",
        name: "game",
        type: "address",
      },
    ],
    name: "CompleteGame_Event",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "address",
            name: "host",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gameType",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "wager",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "address",
                name: "id",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "choice",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isWinner",
                type: "bool",
              },
            ],
            internalType: "struct Gambler[]",
            name: "gamblers",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct DisplayInfo",
        name: "game",
        type: "tuple",
      },
    ],
    name: "CreateGame_Event",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "game",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "VrfRequest_Event",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "VrfResponse_Event",
    type: "event",
  },
  {
    inputs: [],
    name: "bankrollDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "bankrollGetBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bankrollGetTransactionRecords",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "game",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "recordType",
            type: "uint256",
          },
        ],
        internalType: "struct Record[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bankrollWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "choice",
        type: "uint256",
      },
    ],
    name: "createGame",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetGame",
        type: "address",
      },
    ],
    name: "getGame",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "address",
            name: "host",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gameType",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "wager",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "address",
                name: "id",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "choice",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isWinner",
                type: "bool",
              },
            ],
            internalType: "struct Gambler[]",
            name: "gamblers",
            type: "tuple[]",
          },
        ],
        internalType: "struct DisplayInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGames",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "address",
            name: "host",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gameType",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "wager",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "address",
                name: "id",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "choice",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isWinner",
                type: "bool",
              },
            ],
            internalType: "struct Gambler[]",
            name: "gamblers",
            type: "tuple[]",
          },
        ],
        internalType: "struct DisplayInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetGame",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "choice",
        type: "uint256",
      },
    ],
    name: "playGame",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "choice",
        type: "uint256",
      },
    ],
    name: "playGameWithDefaultHost",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200409a3803806200409a8339810160408190526200003491620001a4565b6001600160a01b0381166080819052600580546001600160a01b0319908116909217905560068790556007805463ffffffff86811666010000000000000263ffffffff60301b19918916620100000265ffffffffffff196001600160401b0389166a0100000000000000000000021669ffffffff000000000001600160901b03199094169390931761ffff8b161792909217161790556004805490911633179055604051620000e3906200017c565b604051809103906000f08015801562000100573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b0392909216918217905560405163066ad14f60e21b81523360048201526319ab453c90602401600060405180830381600087803b1580156200015757600080fd5b505af11580156200016c573d6000803e3d6000fd5b5050505050505050505062000242565b610777806200392383390190565b805163ffffffff811681146200019f57600080fd5b919050565b60008060008060008060c08789031215620001be57600080fd5b86519550602087015161ffff81168114620001d857600080fd5b9450620001e8604088016200018a565b9350620001f8606088016200018a565b60808801519093506001600160401b03811681146200021657600080fd5b60a08801519092506001600160a01b03811681146200023457600080fd5b809150509295509295509295565b6080516136be62000265600039600081816101d6015261023101526136be6000f3fe6080604052600436106100b15760003560e01c80638d1a4b2811610069578063aa476d4f1161004e578063aa476d4f1461018c578063c04c5947146101a1578063c9b7cfd3146101c357600080fd5b80638d1a4b281461013c578063a662142e1461016957600080fd5b806363c8b64e1161009a57806363c8b64e146100eb5780636c587491146100fe57806380ecc1ff1461011157600080fd5b80631fe543e3146100b657806360104cef146100d8575b600080fd5b3480156100c257600080fd5b506100d66100d13660046112d5565b6101cb565b005b6100d66100e6366004611377565b610271565b6100d66100f9366004611377565b610426565b6100d661010c3660046113b1565b6105e5565b34801561011d57600080fd5b506101266107d6565b60405161013391906113dd565b60405180910390f35b34801561014857600080fd5b5061015c610157366004611459565b610865565b604051610133919061151b565b34801561017557600080fd5b5061017e610934565b604051908152602001610133565b34801561019857600080fd5b506100d66109ac565b3480156101ad57600080fd5b506101b6610a20565b604051610133919061152e565b6100d6610bab565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610263576040517f1cf993f40000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b61026d8282610c14565b5050565b600034116102ae5760405162461bcd60e51b815260206004820152600a6024820152692722a2a22faba0a3a2a960b11b604482015260640161025a565b60006102bb833433610d44565b600054604051638916e89160e01b81523360048201526001600160a01b038084166024830152929350911690638916e8919034906044016000604051808303818588803b15801561030b57600080fd5b505af115801561031f573d6000803e3d6000fd5b5050604051633b4da69f60e01b8152336004820152602481018690526001600160a01b0385169350633b4da69f92506044019050600060405180830381600087803b15801561036d57600080fd5b505af1158015610381573d6000803e3d6000fd5b505050507f0d21bfa13fbf82d650001644e2b9ba5570e53e528bb0c71afe49c8a729eb5729816001600160a01b03166301e8ba826040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103e4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261040c91908101906115a5565b604051610419919061151b565b60405180910390a1505050565b600034116104635760405162461bcd60e51b815260206004820152600a6024820152692722a2a22faba0a3a2a960b11b604482015260640161025a565b600061047183346000610d44565b600054604051638916e89160e01b81523360048201526001600160a01b038084166024830152929350911690638916e8919034906044016000604051808303818588803b1580156104c157600080fd5b505af11580156104d5573d6000803e3d6000fd5b50505050507f0d21bfa13fbf82d650001644e2b9ba5570e53e528bb0c71afe49c8a729eb5729816001600160a01b03166301e8ba826040518163ffffffff1660e01b8152600401600060405180830381865afa158015610539573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261056191908101906115a5565b60405161056e919061151b565b60405180910390a1604051633b4da69f60e01b8152336004820152602481018390526001600160a01b03821690633b4da69f906044015b600060405180830381600087803b1580156105bf57600080fd5b505af11580156105d3573d6000803e3d6000fd5b505050506105e081610ee1565b505050565b600034116106225760405162461bcd60e51b815260206004820152600a6024820152692722a2a22faba0a3a2a960b11b604482015260640161025a565b6001600160a01b03808316600090815260016020526040902054168061068a5760405162461bcd60e51b815260206004820152600d60248201527f47414d455f46494e495348454400000000000000000000000000000000000000604482015260640161025a565b806001600160a01b031663667d5d226040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec91906116ed565b34101561073b5760405162461bcd60e51b815260206004820152600960248201527f4e4545445f4d4f52450000000000000000000000000000000000000000000000604482015260640161025a565b600054604051638916e89160e01b81523360048201526001600160a01b03838116602483015290911690638916e8919034906044016000604051808303818588803b15801561078957600080fd5b505af115801561079d573d6000803e3d6000fd5b5050604051633b4da69f60e01b8152336004820152602481018690526001600160a01b0385169350633b4da69f925060440190506105a5565b60008054604080517fa7f9fe7200000000000000000000000000000000000000000000000000000000815290516060936001600160a01b039093169263a7f9fe7292600480820193918290030181865afa158015610838573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108609190810190611706565b905090565b6108b26040518060c0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600015158152602001606081525090565b6001600160a01b0380831660009081526001602052604080822054815162f45d4160e11b8152915193169283926301e8ba8292600480820193918290030181865afa158015610905573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261092d91908101906115a5565b9392505050565b60008060009054906101000a90046001600160a01b03166001600160a01b03166381b2d07b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610988573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086091906116ed565b60008054604080517f3ccfd60b00000000000000000000000000000000000000000000000000000000815290516001600160a01b0390921692633ccfd60b9260048084019382900301818387803b158015610a0657600080fd5b505af1158015610a1a573d6000803e3d6000fd5b50505050565b60035460609060009067ffffffffffffffff811115610a4157610a416111fb565b604051908082528060200260200182016040528015610abf57816020015b610aac6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600015158152602001606081525090565b815260200190600190039081610a5f5790505b50905060005b600354811015610ba55760006001600060038481548110610ae857610ae86117f3565b60009182526020808320909101546001600160a01b039081168452908301939093526040918201812054825162f45d4160e11b815292519316935083926301e8ba829260048082019392918290030181865afa158015610b4c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b7491908101906115a5565b838381518110610b8657610b866117f3565b6020026020010181905250508080610b9d90611809565b915050610ac5565b50919050565b60008054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610bf957600080fd5b505af1158015610c0d573d6000803e3d6000fd5b5050505050565b7f6212f877eb0084aa32b47abac64ae772ef0703ac502063e10439fb7d564804688282604051610c4592919061186b565b60405180910390a16000828152600260209081526040808320546001600160a01b039081168452600190925280832054835491517f1d3f457500000000000000000000000000000000000000000000000000000000815290831693928492631d3f457592610cbc929190911690879060040161188c565b6020604051808303816000875af1158015610cdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cff91906118ae565b6040516001600160a01b03841681529091507fbedb408949870ae062edc11c0d63a8ed46ac30c10053bbfff85f4596c7c69e0f9060200160405180910390a150505050565b6000808411610d825760405162461bcd60e51b815260206004820152600a60248201526956414c49445f47414d4560b01b604482015260640161025a565b60038410610dbf5760405162461bcd60e51b815260206004820152600a60248201526956414c49445f47414d4560b01b604482015260640161025a565b600060018503610e145760018385604051610dd9906111e1565b9283526001600160a01b0390911660208301526040820152606001604051809103906000f080158015610e10573d6000803e3d6000fd5b5090505b60028503610e675760028385604051610e2c906111ee565b9283526001600160a01b0390911660208301526040820152606001604051809103906000f080158015610e63573d6000803e3d6000fd5b5090505b6001600160a01b03811660008181526001602081905260408220805473ffffffffffffffffffffffffffffffffffffffff1990811685179091556003805492830181559092527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180549091169091179055949350505050565b60008190506001826001600160a01b031663bbdc02db6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4a91906116ed565b14158015610fb75750816001600160a01b031663a3530de26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb591906118dd565b155b1561108257600080546040517fe492814f0000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201529084169063e492814f906024016020604051808303816000875af1158015611022573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104691906118ae565b6040516001600160a01b03851681529091507fbedb408949870ae062edc11c0d63a8ed46ac30c10053bbfff85f4596c7c69e0f90602001610419565b61026d816005546006546007546040517f5d3b1d3000000000000000000000000000000000000000000000000000000000815260048101929092526a0100000000000000000000810467ffffffffffffffff16602483015261ffff8116604483015262010000810463ffffffff908116606484015266010000000000009091041660848201526000916001600160a01b031690635d3b1d309060a4016020604051808303816000875af115801561113d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116191906116ed565b604080516001600160a01b0385168152602081018390529192507f7cfdac8875e345fb9c93a954ebeabbc3f136ce96a14cc688e9abb16949159df1910160405180910390a16000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610e40806118f983390190565b610f508061273983390190565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611234576112346111fb565b60405290565b6040516060810167ffffffffffffffff81118282101715611234576112346111fb565b60405160a0810167ffffffffffffffff81118282101715611234576112346111fb565b604051601f8201601f1916810167ffffffffffffffff811182821017156112a9576112a96111fb565b604052919050565b600067ffffffffffffffff8211156112cb576112cb6111fb565b5060051b60200190565b600080604083850312156112e857600080fd5b8235915060208084013567ffffffffffffffff81111561130757600080fd5b8401601f8101861361131857600080fd5b803561132b611326826112b1565b611280565b81815260059190911b8201830190838101908883111561134a57600080fd5b928401925b828410156113685783358252928401929084019061134f565b80955050505050509250929050565b6000806040838503121561138a57600080fd5b50508035926020909101359150565b6001600160a01b03811681146113ae57600080fd5b50565b600080604083850312156113c457600080fd5b82356113cf81611399565b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b8281101561144c57815180516001600160a01b03908116865287820151811688870152868201511686860152606080820151908601526080908101519085015260a090930192908501906001016113fa565b5091979650505050505050565b60006020828403121561146b57600080fd5b813561092d81611399565b600060c083016001600160a01b03808451168552602081818601511681870152604080860151818801526060808701518189015260808701511515608089015260a087015160c060a08a015285815180885260e08b0191508583019750600092505b8083101561150d57875180518816835286810151878401528501511515858301529685019660019290920191908301906114d8565b509998505050505050505050565b60208152600061092d6020830184611476565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561158357603f19888603018452611571858351611476565b94509285019290850190600101611555565b5092979650505050505050565b805180151581146115a057600080fd5b919050565b600060208083850312156115b857600080fd5b825167ffffffffffffffff808211156115d057600080fd5b9084019060c082870312156115e457600080fd5b6115ec611211565b82516115f781611399565b81528284015161160681611399565b81850152604083810151818301526060808501518184015261162a60808601611590565b608084015260a08501518481111561164157600080fd5b80860195505088601f86011261165657600080fd5b84519350611666611326856112b1565b8481529381028501860193868101908a86111561168257600080fd5b958701955b858710156116da5782878c03121561169f5760008081fd5b6116a761123a565b87516116b281611399565b815287890151898201526116c7858901611590565b8186015282529582019590870190611687565b60a0850152509198975050505050505050565b6000602082840312156116ff57600080fd5b5051919050565b6000602080838503121561171957600080fd5b825167ffffffffffffffff81111561173057600080fd5b8301601f8101851361174157600080fd5b805161174f611326826112b1565b81815260a0918202830184019184820191908884111561176e57600080fd5b938501935b838510156117e75780858a03121561178b5760008081fd5b61179361125d565b855161179e81611399565b8152858701516117ad81611399565b818801526040868101516117c081611399565b90820152606086810151908201526080808701519082015283529384019391850191611773565b50979650505050505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161182957634e487b7160e01b600052601160045260246000fd5b5060010190565b600081518084526020808501945080840160005b8381101561186057815187529582019590820190600101611844565b509495945050505050565b8281526040602082015260006118846040830184611830565b949350505050565b6001600160a01b03831681526040602082015260006118846040830184611830565b6000602082840312156118c057600080fd5b81516bffffffffffffffffffffffff198116811461092d57600080fd5b6000602082840312156118ef57600080fd5b61092d8261159056fe608060405234801561001057600080fd5b50604051610e40380380610e4083398101604081905261002f91610064565b600092909255600380546001939093556001600160a81b03199092166001600160a01b0390911617600160a01b1790556100aa565b60008060006060848603121561007957600080fd5b835160208501519093506001600160a01b038116811461009857600080fd5b80925050604084015190509250925092565b610d87806100b96000396000f3fe6080604052600436106100f35760003560e01c8063812448a51161008a578063c76461b511610059578063c76461b5146103b3578063d9fca769146103c8578063e492814f146103e8578063f437bc591461040857600080fd5b8063812448a5146103495780639ddf651e14610369578063a3530de21461037e578063bbdc02db1461039d57600080fd5b80633b4da69f116100c65780633b4da69f146101d957806365372147146102cf578063667d5d22146102f35780637af42fdb1461030957600080fd5b806301e8ba82146100f85780631d3f45751461012357806322f3e2d4146101615780632aaf9c6614610192575b600080fd5b34801561010457600080fd5b5061010d610440565b60405161011a91906109ee565b60405180910390f35b34801561012f57600080fd5b5061014361013e366004610b68565b61055b565b6040516bffffffffffffffffffffffff19909116815260200161011a565b34801561016d57600080fd5b5060035461018290600160a01b900460ff1681565b604051901515815260200161011a565b34801561019e57600080fd5b506101b26101ad366004610bb8565b610583565b604080516001600160a01b039094168452602084019290925215159082015260600161011a565b6102cd6101e7366004610bd1565b604080516060810182526001600160a01b03938416815260208101928352600091810182815260048054600181018255935290517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b600390930292830180547fffffffffffffffffffffffff000000000000000000000000000000000000000016919095161790935590517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c82015590517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d909101805460ff1916911515919091179055565b005b3480156102db57600080fd5b506102e560025481565b60405190815260200161011a565b3480156102ff57600080fd5b506102e560015481565b34801561031557600080fd5b50610329610324366004610bfd565b6105c3565b604080516001600160a01b0393841681529290911660208301520161011a565b34801561035557600080fd5b506102cd610364366004610bb8565b600255565b34801561037557600080fd5b50610329610648565b34801561038a57600080fd5b506003546001600160a01b031615610182565b3480156103a957600080fd5b506102e560005481565b3480156103bf57600080fd5b506004546102e5565b3480156103d457600080fd5b506102cd6103e3366004610c32565b6106b3565b3480156103f457600080fd5b50610143610403366004610c32565b610723565b34801561041457600080fd5b50600354610428906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b61048d6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600015158152602001606081525090565b6040805160c0810182523081526003546001600160a01b03811660208084019190915260008054848601526001546060850152600160a01b90920460ff161515608084015260048054855181840281018401909652808652939460a08601949093919290919084015b82821015610550576000848152602090819020604080516060810182526003860290920180546001600160a01b031683526001808201548486015260029091015460ff1615159183019190915290835290920191016104f6565b505050915250919050565b6000806000610569846105c3565b91509150610578858383610747565b925050505b92915050565b6004818154811061059357600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116925060ff1683565b60008073__$d46c5885af77a544fb4444b8786e0ffb7e$__630b8361d430856040518363ffffffff1660e01b81526004016105ff929190610c4f565b6040805180830381865af415801561061b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063f9190610ca6565b91509150915091565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f53686f756c646e27742063616c6c2100000000000000000000000000000000006044820152600090819060640160405180910390fd5b60005b60045481101561071f576000600482815481106106d5576106d5610ce0565b6000918252602090912060039091020180549091506001600160a01b0380851691160361070c5760028101805460ff191660011790555b508061071781610d0c565b9150506106b6565b5050565b6000806000610730610648565b9150915061073f848383610747565b949350505050565b6000836001600160a01b038084169085160361089c5760005b6004548110156108665760006001600160a01b03166004828154811061078857610788610ce0565b60009182526020909120600390910201546001600160a01b03161461085457816001600160a01b031663b73e725c600483815481106107c9576107c9610ce0565b600091825260209091206003909102015460015460405160e084901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561083b57600080fd5b505af115801561084f573d6000803e3d6000fd5b505050505b8061085e81610d0c565b915050610760565b50506003805460ff60a01b19169055507f64726177000000000000000000000000000000000000000000000000000000006109e7565b6001546040517f0e38bb3d00000000000000000000000000000000000000000000000000000000815260009173__$ff514511cd52a45bf17a03d5d39748fde2$__91630e38bb3d916108f49160040190815260200190565b602060405180830381865af4158015610911573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109359190610d25565b9050816001600160a01b031663b73e725c86600154846109559190610d3e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156109b357600080fd5b505af11580156109c7573d6000803e3d6000fd5b50506003805460ff60a01b19169055505050606084901b91506109e79050565b9392505050565b6000602080835260e083016001600160a01b03808651168386015282860151604082821681880152808801519150606082818901528089015160808901526080890151151560a089015260a0890151925060c0808901528483518087526101008a0191508785019650600094505b80851015610a915786518051871683528881015189840152840151151584830152958701956001949094019390820190610a5c565b509998505050505050505050565b6001600160a01b0381168114610ab457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610ade57600080fd5b8135602067ffffffffffffffff80831115610afb57610afb610ab7565b8260051b604051601f19603f83011681018181108482111715610b2057610b20610ab7565b604052938452858101830193838101925087851115610b3e57600080fd5b83870191505b84821015610b5d57813583529183019190830190610b44565b979650505050505050565b60008060408385031215610b7b57600080fd5b8235610b8681610a9f565b9150602083013567ffffffffffffffff811115610ba257600080fd5b610bae85828601610acd565b9150509250929050565b600060208284031215610bca57600080fd5b5035919050565b60008060408385031215610be457600080fd5b8235610bef81610a9f565b946020939093013593505050565b600060208284031215610c0f57600080fd5b813567ffffffffffffffff811115610c2657600080fd5b61073f84828501610acd565b600060208284031215610c4457600080fd5b81356109e781610a9f565b6000604082016001600160a01b03851683526020604081850152818551808452606086019150828701935060005b81811015610c9957845183529383019391830191600101610c7d565b5090979650505050505050565b60008060408385031215610cb957600080fd5b8251610cc481610a9f565b6020840151909250610cd581610a9f565b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610d1e57610d1e610cf6565b5060010190565b600060208284031215610d3757600080fd5b5051919050565b8082018082111561057d5761057d610cf656fea264697066735822122088ecf4ccef8e5aaf4373a13bafccca945a9d8144da47a6a8e8f4cd4c7c5bb66764736f6c63430008130033608060405234801561001057600080fd5b50604051610f50380380610f5083398101604081905261002f91610064565b600092909255600380546001939093556001600160a81b03199092166001600160a01b0390911617600160a01b1790556100aa565b60008060006060848603121561007957600080fd5b835160208501519093506001600160a01b038116811461009857600080fd5b80925050604084015190509250925092565b610e97806100b96000396000f3fe6080604052600436106100f35760003560e01c8063812448a51161008a578063c76461b511610059578063c76461b5146103b3578063d9fca769146103c8578063e492814f146103e8578063f437bc591461040857600080fd5b8063812448a5146103495780639ddf651e14610369578063a3530de21461037e578063bbdc02db1461039d57600080fd5b80633b4da69f116100c65780633b4da69f146101d957806365372147146102cf578063667d5d22146102f35780637af42fdb1461030957600080fd5b806301e8ba82146100f85780631d3f45751461012357806322f3e2d4146101615780632aaf9c6614610192575b600080fd5b34801561010457600080fd5b5061010d610440565b60405161011a9190610afe565b60405180910390f35b34801561012f57600080fd5b5061014361013e366004610c78565b61066b565b6040516bffffffffffffffffffffffff19909116815260200161011a565b34801561016d57600080fd5b5060035461018290600160a01b900460ff1681565b604051901515815260200161011a565b34801561019e57600080fd5b506101b26101ad366004610cc8565b610693565b604080516001600160a01b039094168452602084019290925215159082015260600161011a565b6102cd6101e7366004610ce1565b604080516060810182526001600160a01b03938416815260208101928352600091810182815260048054600181018255935290517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b600390930292830180547fffffffffffffffffffffffff000000000000000000000000000000000000000016919095161790935590517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c82015590517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d909101805460ff1916911515919091179055565b005b3480156102db57600080fd5b506102e560025481565b60405190815260200161011a565b3480156102ff57600080fd5b506102e560015481565b34801561031557600080fd5b50610329610324366004610d0d565b6106d3565b604080516001600160a01b0393841681529290911660208301520161011a565b34801561035557600080fd5b506102cd610364366004610cc8565b600255565b34801561037557600080fd5b50610329610758565b34801561038a57600080fd5b506003546001600160a01b031615610182565b3480156103a957600080fd5b506102e560005481565b3480156103bf57600080fd5b506004546102e5565b3480156103d457600080fd5b506102cd6103e3366004610d42565b6107c3565b3480156103f457600080fd5b50610143610403366004610d42565b610833565b34801561041457600080fd5b50600354610428906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b61048d6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600015158152602001606081525090565b60045460009067ffffffffffffffff8111156104ab576104ab610bc7565b6040519080825280602002602001820160405280156104f657816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816104c95790505b50600354909150600160a01b900460ff16156105985760005b6004548110156105925760405180606001604052806004838154811061053757610537610d5f565b600091825260208083206003909202909101546001600160a01b031683528201819052604090910152825183908390811061057457610574610d5f565b6020026020010181905250808061058a90610d8b565b91505061050f565b5061061b565b6004805480602002602001604051908101604052809291908181526020016000905b82821015610614576000848152602090819020604080516060810182526003860290920180546001600160a01b031683526001808201548486015260029091015460ff1615159183019190915290835290920191016105ba565b5050505090505b6040805160c0810182523081526003546001600160a01b0381166020830152600054928201929092526001546060820152600160a01b90910460ff161515608082015260a0810191909152919050565b6000806000610679846106d3565b91509150610688858383610857565b925050505b92915050565b600481815481106106a357600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116925060ff1683565b60008073__$d46c5885af77a544fb4444b8786e0ffb7e$__632ce094d730856040518363ffffffff1660e01b815260040161070f929190610da4565b6040805180830381865af415801561072b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074f9190610dfb565b91509150915091565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f53686f756c646e27742063616c6c2100000000000000000000000000000000006044820152600090819060640160405180910390fd5b60005b60045481101561082f576000600482815481106107e5576107e5610d5f565b6000918252602090912060039091020180549091506001600160a01b0380851691160361081c5760028101805460ff191660011790555b508061082781610d8b565b9150506107c6565b5050565b6000806000610840610758565b9150915061084f848383610857565b949350505050565b6000836001600160a01b03808416908516036109ac5760005b6004548110156109765760006001600160a01b03166004828154811061089857610898610d5f565b60009182526020909120600390910201546001600160a01b03161461096457816001600160a01b031663b73e725c600483815481106108d9576108d9610d5f565b600091825260209091206003909102015460015460405160e084901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561094b57600080fd5b505af115801561095f573d6000803e3d6000fd5b505050505b8061096e81610d8b565b915050610870565b50506003805460ff60a01b19169055507f6472617700000000000000000000000000000000000000000000000000000000610af7565b6001546040517f0e38bb3d00000000000000000000000000000000000000000000000000000000815260009173__$ff514511cd52a45bf17a03d5d39748fde2$__91630e38bb3d91610a049160040190815260200190565b602060405180830381865af4158015610a21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a459190610e35565b9050816001600160a01b031663b73e725c8660015484610a659190610e4e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610ac357600080fd5b505af1158015610ad7573d6000803e3d6000fd5b50506003805460ff60a01b19169055505050606084901b9150610af79050565b9392505050565b6000602080835260e083016001600160a01b03808651168386015282860151604082821681880152808801519150606082818901528089015160808901526080890151151560a089015260a0890151925060c0808901528483518087526101008a0191508785019650600094505b80851015610ba15786518051871683528881015189840152840151151584830152958701956001949094019390820190610b6c565b509998505050505050505050565b6001600160a01b0381168114610bc457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610bee57600080fd5b8135602067ffffffffffffffff80831115610c0b57610c0b610bc7565b8260051b604051601f19603f83011681018181108482111715610c3057610c30610bc7565b604052938452858101830193838101925087851115610c4e57600080fd5b83870191505b84821015610c6d57813583529183019190830190610c54565b979650505050505050565b60008060408385031215610c8b57600080fd5b8235610c9681610baf565b9150602083013567ffffffffffffffff811115610cb257600080fd5b610cbe85828601610bdd565b9150509250929050565b600060208284031215610cda57600080fd5b5035919050565b60008060408385031215610cf457600080fd5b8235610cff81610baf565b946020939093013593505050565b600060208284031215610d1f57600080fd5b813567ffffffffffffffff811115610d3657600080fd5b61084f84828501610bdd565b600060208284031215610d5457600080fd5b8135610af781610baf565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610d9d57610d9d610d75565b5060010190565b6000604082016001600160a01b03851683526020604081850152818551808452606086019150828701935060005b81811015610dee57845183529383019391830191600101610dd2565b5090979650505050505050565b60008060408385031215610e0e57600080fd5b8251610e1981610baf565b6020840151909250610e2a81610baf565b809150509250929050565b600060208284031215610e4757600080fd5b5051919050565b8082018082111561068d5761068d610d7556fea264697066735822122039ec8b7ac9f9b4d2ba03d63986ccd1d35128fddcb0985d5a50f22dfba774dcdf64736f6c63430008130033a2646970667358221220c5bf0f675b9e337f1da11c5938501d412ae58e27ee0a0168de9f8b4306914d0d64736f6c63430008130033608060405234801561001057600080fd5b50610757806100206000396000f3fe6080604052600436106100705760003560e01c80638916e8911161004e5780638916e891146100f6578063a7f9fe7214610109578063b73e725c1461012b578063d0e30db01461014b57600080fd5b806319ab453c146100755780633ccfd60b146100c157806381b2d07b146100d6575b600080fd5b34801561008157600080fd5b506100bf61009036600461061c565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b005b3480156100cd57600080fd5b506100bf610153565b3480156100e257600080fd5b506040514781526020015b60405180910390f35b6100bf610104366004610640565b6101ae565b34801561011557600080fd5b5061011e6101bf565b6040516100ed9190610679565b34801561013757600080fd5b506100bf6101463660046106f5565b61025a565b6100bf610373565b6000805460405147926001600160a01b039092169183156108fc02918491818181858888f1935050505015801561018e573d6000803e3d6000fd5b50600080546101ab916001600160a01b0390911690836003610383565b50565b6101bb82823460016104c5565b5050565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156102515760008481526020908190206040805160a0810182526005860290920180546001600160a01b0390811684526001808301548216858701526002830154909116928401929092526003810154606084015260040154608083015290835290920191016101e3565b50505050905090565b478111156102af5760405162461bcd60e51b815260206004820152601b60248201527f42414e4b524f4c4c5f42414c414e43455f4e4f545f454e4f554748000000000060448201526064015b60405180910390fd5b6001600160a01b038216156101bb576000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461030b576040519150601f19603f3d011682016040523d82523d6000602084013e610310565b606091505b50509050806103615760405162461bcd60e51b815260206004820152600d60248201527f5041594f55545f4641494c45440000000000000000000000000000000000000060448201526064016102a6565b61036e8333846002610383565b505050565b6103813360003460046104c5565b565b6040805160a0810182523081526001600160a01b03958616602082019081529486169181019182526060810193845260808101928352600180548082018255600091909152905160059091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68101805492881673ffffffffffffffffffffffffffffffffffffffff1993841617905594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf78601805491881691831691909117905590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf88501805491909616911617909355517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf982015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa90910155565b6040805160a0810182526001600160a01b03958616815230602082019081529486169181019182526060810193845260808101928352600180548082018255600091909152905160059091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68101805492881673ffffffffffffffffffffffffffffffffffffffff1993841617905594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf78601805491881691831691909117905590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf88501805491909616911617909355517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf982015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa90910155565b6001600160a01b03811681146101ab57600080fd5b60006020828403121561062e57600080fd5b813561063981610607565b9392505050565b6000806040838503121561065357600080fd5b823561065e81610607565b9150602083013561066e81610607565b809150509250929050565b602080825282518282018190526000919060409081850190868401855b828110156106e857815180516001600160a01b03908116865287820151811688870152868201511686860152606080820151908601526080908101519085015260a09093019290850190600101610696565b5091979650505050505050565b6000806040838503121561070857600080fd5b823561071381610607565b94602093909301359350505056fea2646970667358221220efd8141f43b9b8377712f378929171dddf1b7337febec04d4036c1ff23a46b0164736f6c63430008130033";

type CasinoConstructorParams =
  | [linkLibraryAddresses: CasinoLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CasinoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Casino__factory extends ContractFactory {
  constructor(...args: CasinoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Casino__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: CasinoLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d46c5885af77a544fb4444b8786e0ffb7e\\$__", "g"),
      linkLibraryAddresses["contracts/source/gameWinnerLib.sol:GameWinner"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ff514511cd52a45bf17a03d5d39748fde2\\$__", "g"),
      linkLibraryAddresses["contracts/source/vigorishLib.sol:Vigorish"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    keyHash: PromiseOrValue<BytesLike>,
    minimumRequestConfirmations: PromiseOrValue<BigNumberish>,
    callbackGasLimit: PromiseOrValue<BigNumberish>,
    numWords: PromiseOrValue<BigNumberish>,
    subId: PromiseOrValue<BigNumberish>,
    VRFCoordinatorV2InterfaceAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Casino> {
    return super.deploy(
      keyHash,
      minimumRequestConfirmations,
      callbackGasLimit,
      numWords,
      subId,
      VRFCoordinatorV2InterfaceAddress,
      overrides || {}
    ) as Promise<Casino>;
  }
  override getDeployTransaction(
    keyHash: PromiseOrValue<BytesLike>,
    minimumRequestConfirmations: PromiseOrValue<BigNumberish>,
    callbackGasLimit: PromiseOrValue<BigNumberish>,
    numWords: PromiseOrValue<BigNumberish>,
    subId: PromiseOrValue<BigNumberish>,
    VRFCoordinatorV2InterfaceAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      keyHash,
      minimumRequestConfirmations,
      callbackGasLimit,
      numWords,
      subId,
      VRFCoordinatorV2InterfaceAddress,
      overrides || {}
    );
  }
  override attach(address: string): Casino {
    return super.attach(address) as Casino;
  }
  override connect(signer: Signer): Casino__factory {
    return super.connect(signer) as Casino__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CasinoInterface {
    return new utils.Interface(_abi) as CasinoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Casino {
    return new Contract(address, _abi, signerOrProvider) as Casino;
  }
}

export interface CasinoLibraryAddresses {
  ["contracts/source/gameWinnerLib.sol:GameWinner"]: string;
  ["contracts/source/vigorishLib.sol:Vigorish"]: string;
}
